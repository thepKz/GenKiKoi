name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Clear npm cache
      run: npm cache clean --force

    - name: Remove node_modules and package-lock.json
      run: |
        rm -rf node_modules
        rm -f package-lock.json

    - name: Install dependencies and build client
      run: |
        cd client
        npm ci
        npm run build
      env:
        VITE_BASE_apiKey: ${{ secrets.VITE_BASE_APIKEY }}
        VITE_BASE_authDomain: ${{ secrets.VITE_BASE_AUTHDOMAIN }}
        VITE_BASE_projectId: ${{ secrets.VITE_BASE_PROJECTID }}
        VITE_BASE_storageBucket: ${{ secrets.VITE_BASE_STORAGEBUCKET }}
        VITE_BASE_messagingSenderId: ${{ secrets.VITE_BASE_MESSAGINGSENDERID }}
        VITE_BASE_appId: ${{ secrets.VITE_BASE_APPID }}
        VITE_API_URL: ${{ secrets.VITE_API_URL }}

    - name: Install dependencies and build server
      run: |
        cd server
        npm ci
        npm run build
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}

    - name: Run server tests
      run: |
        cd server
        npm run test
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: client/dist

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./client/dist
      - name: Deploy to Netlify (Staging)
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './client/dist'
          production-branch: develop
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy to staging from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}

  deploy-production:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./client/dist
      - name: Deploy to Netlify (Production)
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './client/dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy to production from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PRODUCTION_SITE_ID }}

  deploy-backend:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}